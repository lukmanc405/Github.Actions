name: Notify Telegram on GitHub Events

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, closed, reopened]
  issues:
    types: [opened, closed]
  release:
    types: [published]

jobs:
  telegram_notification:
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram notification
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          build_message() {
            case "$GITHUB_EVENT_NAME" in
              push)
                echo "🚀 *Push Detected*\n📦 Repo: *$GITHUB_REPOSITORY*\n👤 Author: *$GITHUB_ACTOR*\n💬 Commit: [$GITHUB_SHA]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit/$GITHUB_SHA)"
                ;;
              pull_request)
                echo "📢 *Pull Request $GITHUB_EVENT_ACTION*\n📦 Repo: *$GITHUB_REPOSITORY*\n👤 User: *$GITHUB_ACTOR*\n🔖 Title: $GITHUB_EVENT_PULL_REQUEST_TITLE"
                ;;
              issues)
                echo "🐛 *Issue $GITHUB_EVENT_ACTION*\n📦 Repo: *$GITHUB_REPOSITORY*\n👤 User: *$GITHUB_ACTOR*\n🔖 Title: $GITHUB_EVENT_ISSUE_TITLE"
                ;;
              release)
                echo "📦 *New Release Published!*\n📦 Repo: *$GITHUB_REPOSITORY*\n🏷️ Tag: $GITHUB_EVENT_RELEASE_TAG_NAME\n🔖 $GITHUB_EVENT_RELEASE_NAME"
                ;;
              *)
                echo "ℹ️ Event: $GITHUB_EVENT_NAME - not handled."
                ;;
            esac
          }

          MESSAGE=$(build_message)
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"
