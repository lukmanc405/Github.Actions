name: Notify Telegram on GitHub Events

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, closed, reopened]
  issues:
    types: [opened, closed]
  release:
    types: [published]

jobs:
  telegram_notification:
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram notification
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          if [ "$GITHUB_EVENT_NAME" = "push" ]; then
            MESSAGE="🚀 *Push Detected*\n📦 Repo: *${{ github.repository }}*\n👤 Author: *${{ github.event.head_commit.author.name }}*\n💬 Commit: [${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})"
          
          elif [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            MESSAGE="📢 *Pull Request ${{ github.event.action }}*\n📦 Repo: *${{ github.repository }}*\n👤 User: *${{ github.event.pull_request.user.login }}*\n🔖 Title: [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})"
          
          elif [ "$GITHUB_EVENT_NAME" = "issues" ]; then
            MESSAGE="🐛 *Issue ${{ github.event.action }}*\n📦 Repo: *${{ github.repository }}*\n👤 User: *${{ github.event.issue.user.login }}*\n🔖 Title: [${{ github.event.issue.title }}](${{ github.event.issue.html_url }})"

          elif [ "$GITHUB_EVENT_NAME" = "release" ]; then
            MESSAGE="📦 *New Release Published!*\n📦 Repo: *${{ github.repository }}*\n🏷️ Tag: *${{ github.event.release.tag_name }}*\n🔖 [${{ github.event.release.name }}](${{ github.event.release.html_url }})"
          
          else
            MESSAGE="ℹ️ Event $GITHUB_EVENT_NAME received but not handled."
          fi

          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"
